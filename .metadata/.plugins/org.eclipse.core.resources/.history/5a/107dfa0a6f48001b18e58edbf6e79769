#include "stm32f10x.h"
#include "pwm.h"




// переменные дл€ PP режима управлени€ (однотактные/двутактные преобразователи)
/*
unsigned short	PWM_1 = 0;									// значени€ дл€ таймера 1. три канала.
unsigned short	PWM_2 = 0;
unsigned short	PWM_3 = 0;
*/

unsigned short TMR_T 			= period;					//	4500 - 16kHz COMPL_MODE		// 360 - 100 kHz PP_MODE
															// ƒл€ PP_MODE:  TMR_T = (72 000 / „астотак√ц) / 2
															// 				 „астота(к√ц) = 72 000/(TMR_T * 2)


void set_pwm_R(unsigned short pwm)
{
	TIM1->CCR1=pwm;
}

void set_pwm_G(unsigned short pwm)
{
	TIM1->CCR2=pwm;
}

void set_pwm_B(unsigned short pwm)
{
	TIM1->CCR3=pwm;
}




void init_pwm(void)
{

	init_timer3();

	RCC->APB2ENR|= RCC_APB2ENR_TIM1EN;

    TIM1->CCMR1=TIM_CCMR1_OC1M_2 | TIM_CCMR1_OC1M_1 | TIM_CCMR1_OC1PE;
    TIM1->CCER=TIM_CCER_CC1E | TIM_CCER_CC2E | TIM_CCER_CC3E;	// разрешение комплиментарного режима.
    TIM1->BDTR=TIM_BDTR_MOE | DEADTIME;

    TIM1->ARR=TMR_T;				// регистр автоматической перезагрузки
    TIM1->CR1=TIM_CR1_ARPE;			// разрешить буферизированный режим записи в регистр перезагрузки
    TIM1->CR1|=TIM_CR1_CEN;			// разрешить работу счЄтчика
    TIM1->EGR=TIM_EGR_UG;			// –егистр генерации событий. генераци€ перезагрузки


/*
	//init_timer3();

    RCC->APB2ENR|= RCC_APB2ENR_TIM1EN;

    TIM1->CCMR1=TIM_CCMR1_OC1M_2 | TIM_CCMR1_OC1M_1 | TIM_CCMR1_OC1PE;

    TIM1->CCER=TIM_CCER_CC1E | TIM_CCER_CC1NE;				// разрешение комплиментарного режима
    TIM1->CCER=TIM_CCER_CC2E | TIM_CCER_CC2NE;
    TIM1->CCER=TIM_CCER_CC3E | TIM_CCER_CC3NE;

    TIM1->BDTR=TIM_BDTR_MOE | DEADTIME;
    TIM1->ARR=TMR_T;										// период
    TIM1->CR1=TIM_CR1_ARPE;
    TIM1->CR1|=TIM_CR1_CEN;
    TIM1->EGR=TIM_EGR_UG;

    TIM1->CCR1=1000;											// мгновенные значени€ шима
    //TIM1->CCR2=100;
    //TIM1->CCR3=100;

*/

}




void init_timer3(void)						// Ќастройка таймера 3. ќбщий дл€ отсчЄтов задержек
{
	RCC->APB1ENR |= RCC_APB1ENR_TIM3EN;
	TIM3->CR1 |= TIM_CR1_ARPE; 				//shadow
	TIM3->CR1 |= TIM_CR1_DIR;

	TIM3->PSC = 71;							// 72MHz/(PSC+1)	один тик  - 1 мкс
	TIM3->ARR = 25;							// 1000 - 1 мс
											// 50 - 55,55 гц
											// 25 - 111,111 гц

	TIM3->DIER |= TIM_DIER_UIE;
	TIM3->CR1 |= TIM_CR1_CEN;

	NVIC_EnableIRQ (TIM3_IRQn);
}



void TIM3_IRQHandler (void)									// обработчик таймера дл€ расчЄта частоты частоты синуса
{
	unsigned short status;
	status = TIM3->SR;
	TIM3->SR = ~status;

	if(status & TIM_SR_UIF)
	{

	}
} // скобка TIM2_IRQHandler





